openapi: 3.1.0
info:
  title: TrueStar API
  description: API for fake review detection services
  version: 1.0.0
  contact:
    name: TrueStar Team
    email: hello@truestar.pro

# TODO: As the API grows, consider splitting into multiple files, such as:
# - /paths/*.yaml for endpoint definitions
# - /schemas/flags/*.yaml for individual flag types
# - /schemas/requests/*.yaml and /schemas/responses/*.yaml
# A tool can be used to merge the files into a single file for distribution.

servers:
  - url: https://api.truestar.pro
    description: Production
  - url: http://localhost:8080
    description: Local development

paths:
  /health:
    get:
      summary: Health check endpoint
      operationId: getHealth
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /check/amazon/product:
    post:
      summary: Check Amazon product reviews for authenticity
      description: |
        Analyzes a batch of Amazon product reviews to detect patterns of fake or manipulated reviews.
        Returns trust score, red flags (suspicious patterns), and green flags (authenticity indicators).
        
        The API uses LLM analysis to identify common fake review patterns such as review bombing,
        repeated phrases, and excessively positive language, while also recognizing authenticity
        signals like high verified purchase rates and natural rating distributions.
      operationId: checkAmazonProduct
      tags:
        - Amazon
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAmazonProductRequest'
      responses:
        '200':
          description: Product check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAmazonProductResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - status
          properties:
            status:
              type: string
              enum: [ok]
              example: ok

    CheckAmazonProductRequest:
      type: object
      required:
        - reviews
      properties:
        reviews:
          type: array
          minItems: 1
          maxItems: 100
          description: Array of review data to analyze (max 100 for prototype)
          items:
            $ref: '#/components/schemas/AmazonReview'

    CheckAmazonProductResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - summary
            - metrics
          properties:
            summary:
              $ref: '#/components/schemas/ProductSummary'
            greenFlags:
              type: array
              items:
                $ref: '#/components/schemas/GreenFlag'
              description: Positive authenticity indicators
            redFlags:
              type: array
              items:
                $ref: '#/components/schemas/RedFlag'
              description: Suspicious patterns detected
            metrics:
              $ref: '#/components/schemas/AnalysisMetrics'

    Response:
      type: object
      required:
        - timestamp
      properties:
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
          example: '2024-12-22T10:00:00.000Z'

    ProductSummary:
      type: object
      required:
        - trustScore
      properties:
        trustScore:
          type: integer
          minimum: 0
          maximum: 100
          description: Overall trust score (0-100)
          example: 72

    Flag:
      type: object
      required:
        - type
        - confidence
        - details
      properties:
        type:
          type: string
          description: Type of flag detected
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence level (0-1)
        details:
          type: object
          description: Flag-specific details

    RedFlag:
      oneOf:
        - $ref: '#/components/schemas/ReviewBombingFlag'
        - $ref: '#/components/schemas/PhraseRepetitionFlag'
        - $ref: '#/components/schemas/ExcessivePositivityFlag'
      discriminator:
        propertyName: type
        mapping:
          review_bombing: '#/components/schemas/ReviewBombingFlag'
          phrase_repetition: '#/components/schemas/PhraseRepetitionFlag'
          excessive_positivity: '#/components/schemas/ExcessivePositivityFlag'

    GreenFlag:
      oneOf:
        - $ref: '#/components/schemas/HighVerifiedPurchasesFlag'
      discriminator:
        propertyName: type
        mapping:
          high_verified_purchases: '#/components/schemas/HighVerifiedPurchasesFlag'

    # Red flag schemas
    ReviewBombingFlag:
      allOf:
        - $ref: '#/components/schemas/Flag'
        - type: object
          properties:
            type:
              type: string
              enum: [review_bombing]
            details:
              type: object
              required:
                - date
                - reviewCount
                - hoursSpan
              properties:
                date:
                  type: string
                  format: date
                  description: Date of the review surge
                  example: "2024-01-15"
                reviewCount:
                  type: integer
                  description: Number of reviews posted
                  example: 34
                hoursSpan:
                  type: number
                  description: Time span in hours
                  example: 3
                reviewIds:
                  type: array
                  description: IDs of the suspicious reviews
                  items:
                    type: string
                  example: ["amzn_123", "amzn_124", "amzn_125"]

    PhraseRepetitionFlag:
      allOf:
        - $ref: '#/components/schemas/Flag'
        - type: object
          properties:
            type:
              type: string
              enum: [phrase_repetition]
            details:
              type: object
              required:
                - phrase
                - reviewIds
              properties:
                phrase:
                  type: string
                  description: The repeated phrase
                  example: "gorgeous navy blue lamp"
                reviewIds:
                  type: array
                  description: Reviews containing the phrase
                  items:
                    type: string

    ExcessivePositivityFlag:
      allOf:
        - $ref: '#/components/schemas/Flag'
        - type: object
          properties:
            type:
              type: string
              enum: [excessive_positivity]
            details:
              type: object
              required:
                - reviewIds
              properties:
                reviewIds:
                  type: array
                  description: Reviews with excessive positivity
                  items:
                    type: string
                keywords:
                  type: array
                  description: Common superlative keywords found
                  items:
                    type: string
                  example: ["amazing", "perfect", "best ever", "life-changing"]

    # Green flag schemas
    HighVerifiedPurchasesFlag:
      allOf:
        - $ref: '#/components/schemas/Flag'
        - type: object
          properties:
            type:
              type: string
              enum: [high_verified_purchases]
            details:
              type: object
              required:
                - percentage
              properties:
                percentage:
                  type: number
                  minimum: 0
                  maximum: 100
                  description: Percentage of verified purchases
                  example: 87


    AnalysisMetrics:
      type: object
      required:
        - analyzed
        - total
      properties:
        analyzed:
          type: integer
          description: Number of reviews analyzed
          example: 100
        total:
          type: integer
          description: Total number of reviews for the product
          example: 347

    AmazonReview:
      type: object
      required:
        - id
        - rating
        - text
        - author
        - verified
      properties:
        id:
          type: string
          description: Unique identifier for the review
          example: "RQ1XFNZ96Y1ST"
        rating:
          type: number
          minimum: 1
          maximum: 5
          description: Review rating (1-5 stars)
          example: 5
        text:
          type: string
          minLength: 1
          description: The review text content
          example: "This product is amazing! Best purchase ever!"
        author:
          type: string
          description: The reviewer's name or username
          example: "John D."
        verified:
          type: boolean
          description: Whether this is a verified purchase
          example: true
        date:
          type: string
          description: The date when the review was posted
          example: "2024-01-15"
        helpfulVotes:
          type: number
          description: Number of helpful votes
          example: 42
        totalVotes:
          type: number
          description: Total number of votes
          example: 50
        productVariation:
          type: string
          description: Product variation purchased
          example: "Color: Blue, Size: Large"
        isVineReview:
          type: boolean
          description: Whether this is a Vine review
          example: false
        badges:
          type: array
          items:
            type: string
          description: Badges associated with the review
          example: ["Verified Purchase", "Top Contributor"]

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - statusCode
            - error
          properties:
            statusCode:
              type: integer
              description: HTTP status code
              example: 400
            error:
              type: string
              description: Error message
              example: "Invalid request"
            details:
              type: string
              description: Additional error details
              example: "Review text is required"

tags:
  - name: System
    description: System health and status endpoints
  - name: Products
    description: Product authenticity checker endpoints
  - name: Amazon
    description: Amazon-specific endpoints